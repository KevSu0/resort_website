rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             resource.data.role == 'admin' &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isValidEmail() {
      return isAuthenticated() && request.auth.token.email_verified;
    }

    // Resort Group Configuration (Admin only)
    match /resort_group/{document} {
      allow read: if true; // Public read for basic resort info
      allow write: if isAdmin();
    }

    // Properties (Public read, Admin write)
    match /properties/{propertyId} {
      allow read: if resource.data.active == true;
      allow write: if isAdmin();
      
      // Property images and media
      match /images/{imageId} {
        allow read: if true;
        allow write: if isAdmin();
      }
    }

    // Cities (Public read, Admin write)
    match /cities/{citySlug} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Stay Types (Public read, Admin write)
    match /stay_types/{stayTypeId} {
      allow read: if resource.data.active == true;
      allow write: if isAdmin();
    }

    // Users (Owner read/write, Admin read)
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isAuthenticated() && isOwner(userId) && isValidEmail();
      allow update: if isOwner(userId) && isValidEmail();
      allow delete: if isAdmin();
    }

    // Enquiries (Owner and Admin access)
    match /enquiries/{enquiryId} {
      allow read: if isAuthenticated() && 
                     (isOwner(resource.data.user_id) || isAdmin());
      allow create: if isAuthenticated() && 
                       isOwner(request.resource.data.user_id) && 
                       isValidEmail();
      allow update: if isAdmin(); // Only admin can update enquiry status
      allow delete: if isAdmin();
    }

    // Offers (Public read, Admin write)
    match /offers/{offerId} {
      allow read: if resource.data.active == true && 
                     resource.data.valid_until.toMillis() > request.time.toMillis();
      allow write: if isAdmin();
    }

    // Referrals (Owner and Admin access)
    match /referrals/{referralId} {
      allow read: if isAuthenticated() && 
                     (isOwner(resource.data.referrer_id) || 
                      isOwner(resource.data.referee_id) || 
                      isAdmin());
      allow create: if isAuthenticated() && 
                       isOwner(request.resource.data.referrer_id) && 
                       isValidEmail();
      allow update: if isAdmin(); // Only admin can update referral status
      allow delete: if isAdmin();
    }

    // SEO Content (Public read, Admin write)
    match /seo_content/{contentId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Content Jobs (Admin only)
    match /content_jobs/{jobId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }

    // Analytics and Metrics (Admin only)
    match /analytics/{document} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }

    // Site Configuration (Public read, Admin write)
    match /site_config/{configId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Form Security Configuration (Admin only)
    match /form_security/{configId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }

    // Booking Sessions (Owner access)
    match /booking_sessions/{sessionId} {
      allow read, write: if isAuthenticated() && 
                            isOwner(resource.data.user_id);
      allow create: if isAuthenticated() && 
                       isOwner(request.resource.data.user_id);
    }

    // Reviews and Ratings (Public read, Owner write)
    match /reviews/{reviewId} {
      allow read: if resource.data.approved == true;
      allow create: if isAuthenticated() && 
                       isOwner(request.resource.data.user_id) && 
                       isValidEmail();
      allow update: if isOwner(resource.data.user_id) || isAdmin();
      allow delete: if isAdmin();
    }

    // Notifications (Owner access)
    match /notifications/{notificationId} {
      allow read, write: if isAuthenticated() && 
                            isOwner(resource.data.user_id);
      allow create: if isAuthenticated() && 
                       isOwner(request.resource.data.user_id);
    }

    // Default deny rule
    match /{document=**} {
      allow read, write: if false;
    }
  }
}